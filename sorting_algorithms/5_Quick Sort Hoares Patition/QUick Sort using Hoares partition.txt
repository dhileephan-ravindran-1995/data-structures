def hoares_partition(lst,lo,hi):
    pivot = lst[lo]
    i = lo-1
    j = hi+1
    while True:
        while True:
            i = i+1
            if(lst[i] >= pivot):
                break
        while True:
            j = j-1
            if(lst[j] <= pivot):
                break
        # if crossover happend return j as new partition index
        if i>=j:
            return j
        # swap [i]th index and [j]th index
        lst[i], lst[j] = lst[j], lst[i]

def quick_sort(lst, lo, hi):
    if(lo == hi):
        return lst
    print("considered Array:")
    print(lst)
    pi = hoares_partition(lst,lo,hi)
    quick_sort(lst,lo,pi)
    quick_sort(lst,pi+1,hi)
    return None

def main():
    lst = [7,2,8,3,9,6,1,0,5,4]
    print("Unsorted Array")
    print(lst)
    print("***********************************")
    quick_sort(lst,0,len(lst)-1)
    print("***********************************")
    print("quick sorted Array using Hoares partition method")
    print(lst)

if __name__ == "__main__":
    main()